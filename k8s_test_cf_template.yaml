---

AWSTemplateFormatVersion: 2010-09-09

Description: A basic template for testing bootstrapping k8s

Parameters:

  KeyName:

    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

    Type: 'AWS::EC2::KeyPair::KeyName'

    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:

    Description: WebServer EC2 instance type

    Type: String

    Default: t2.small

    AllowedValues:

      - t1.micro

      - t2.nano

      - t2.micro

      - t2.small

      - t2.medium

      - t2.large

      - m1.small

      - m1.medium

      - m1.large

      - m1.xlarge

      - m2.xlarge

      - m2.2xlarge

      - m2.4xlarge

      - m3.medium

      - m3.large

      - m3.xlarge

      - m3.2xlarge

      - m4.large

      - m4.xlarge

      - m4.2xlarge

      - m4.4xlarge

      - m4.10xlarge

      - c1.medium

      - c1.xlarge

      - c3.large

      - c3.xlarge

      - c3.2xlarge

      - c3.4xlarge

      - c3.8xlarge

      - c4.large

      - c4.xlarge

      - c4.2xlarge

      - c4.4xlarge

      - c4.8xlarge

      - g2.2xlarge

      - g2.8xlarge

      - r3.large

      - r3.xlarge

      - r3.2xlarge

      - r3.4xlarge

      - r3.8xlarge

      - i2.xlarge

      - i2.2xlarge

      - i2.4xlarge

      - i2.8xlarge

      - d2.xlarge

      - d2.2xlarge

      - d2.4xlarge

      - d2.8xlarge

      - hi1.4xlarge

      - hs1.8xlarge

      - cr1.8xlarge

      - cc2.8xlarge

      - cg1.4xlarge

    ConstraintDescription: must be a valid EC2 instance type.

  SSHLocation:

    Description: The IP address range that can be used to SSH to the EC2 instances

    Type: String

    MinLength: '9'

    MaxLength: '18'

    Default: 0.0.0.0/0

    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'

    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:

  k8smaster1:

    Type: 'AWS::EC2::Instance'

    Properties:

      InstanceType: !Ref InstanceType

      SecurityGroups:

        - !Ref InstanceSecurityGroup

      KeyName: !Ref KeyName

      ImageId: ami-3548444c
      Tags:
        - Key: Name
          Value: k8sworker1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          cat <<EOF > /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          exclude=kube*
          EOF
          yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes


    Metadata:

      'AWS::CloudFormation::Designer':

        id: 10fdbb76-3e2a-4003-b6f4-fa8d7d710b80

  k8sworker1:

    Type: 'AWS::EC2::Instance'

    Properties:

      InstanceType: !Ref InstanceType

      SecurityGroups:

        - !Ref InstanceSecurityGroup

      KeyName: !Ref KeyName

      ImageId: ami-3548444c
      
      Tags:
        - Key: Name
          Value: k8sworker1
      UserData: 
        Fn::Base64: |
          #!/bin/bash
          cat <<EOF > /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          exclude=kube*
          EOF
          yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

  InstanceSecurityGroup:

    Type: 'AWS::EC2::SecurityGroup'

    Properties:

      GroupDescription: Enable SSH access via port 22

      SecurityGroupIngress:

        - IpProtocol: tcp

          FromPort: '22'

          ToPort: '22'

          CidrIp: !Ref SSHLocation

    Metadata:

      'AWS::CloudFormation::Designer':

        id: 4cfd635b-98d6-4294-aa54-c334e815184f

Outputs:

  k8sMasterInstanceId:

    Description: InstanceId of the newly created k8s master

    Value: !Ref k8smaster1

  k8smasterAZ:

    Description: Availability Zone of the newly created k8s master

    Value: !GetAtt 

      - k8smaster1

      - AvailabilityZone

  k8sMasterPublicDNS:

    Description: Public DNSName of the newly created k8s master

    Value: !GetAtt 

      - k8smaster1

      - PublicDnsName

  k8sMasterPublicIP:

    Description: Public IP address of the newly created k8s master

    Value: !GetAtt 

      - k8smaster1

      - PublicIp

  k8sWorkerInstanceId:

    Description: InstanceId of the newly created k8s worker

    Value: !Ref k8sworker1

  k8sworkerAZ:

    Description: Availability Zone of the newly created k8s worker

    Value: !GetAtt 

      - k8sworker1

      - AvailabilityZone

  k8sWorkerPublicDNS:

    Description: Public DNSName of the newly created k8s worker

    Value: !GetAtt 

      - k8sworker1

      - PublicDnsName

  k8sWorkerPublicIP:

    Description: Public IP address of the newly created k8s worker

    Value: !GetAtt 

      - k8sworker1

      - PublicIp

Metadata:

  'AWS::CloudFormation::Designer':

    4cfd635b-98d6-4294-aa54-c334e815184f:

      size:

        width: 60

        height: 60

      position:

        x: 60

        'y': 90

      z: 1

      embeds: []

    10fdbb76-3e2a-4003-b6f4-fa8d7d710b80:

      size:

        width: 60

        height: 60

      position:

        x: 290

        'y': 90

      z: 1

      embeds: []

      isassociatedwith:

        - 4cfd635b-98d6-4294-aa54-c334e815184f
